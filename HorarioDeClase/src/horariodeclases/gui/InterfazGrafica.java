/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package horariodeclases.gui;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import javax.swing.JFormattedTextField.AbstractFormatter;
import javax.swing.text.MaskFormatter;

import horariodeclase.Horario;
import horariodeclase.ListaDeMateri;
import horariodeclase.Materia;
import horariodeclase.Profesor;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.text.ParseException;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.JFormattedTextField;


/**
 *
 * @author Alexateam
 */
public class InterfazGrafica extends javax.swing.JFrame {
    
    String[] titulosHorario = {"Profesor", "Lunes", "Martes", "Miercoles", "Jueves", "Viernes", "Sabado", "Tanda", "Hora"};
    String[] titulosProfesor = {"Cedula", "Nombre","Apellido","Creditos"};

    
    DefaultTableModel modeloHorario = new DefaultTableModel(titulosHorario, 0);
    DefaultTableModel modeloProfesor = new DefaultTableModel(titulosProfesor,0);
       Map<Integer, String> dias = new HashMap<Integer, String>();
       MaskFormatter formater = null;

    
    List<Profesor> profesores;
    List<Integer> controlDias;
    
     String[] disponible;
     int[] dispon;
     
     Integer diaActual = 1;
     
     public Integer devolverDiaActual()
     {
         if(diaActual==7)
             diaActual=1;
         
         return diaActual++;
     }
     
     public void iniciar()
     {
         dispon = new int[6];
         for(int i =0; i<dispon.length; i++)
         {
             dispon[i] = i+1;
         }
     }
     
  
     public void setearDias()
    {
        dias.put(1, "Lunes");
        dias.put(2, "Martes");
        dias.put(3, "Miercoles");
        dias.put(4, "Jueves");
        dias.put(5, "Viernes");
        dias.put(6, "Sabado");
        iniciar();
       
    }
     public void imprimirPDF() throws FileNotFoundException, DocumentException
    {
        
        
            Document document=new Document() {}; 
    PdfWriter.getInstance(document,new FileOutputStream("PrintHorario.pdf"));
    document.open(); 
    document.add(new Paragraph("*************HORARIO DE PROFESORES DEL ITLA*****************")); 
    String output= "";
    
                Map<String, Materia> materias = new HashMap<String,Materia>();
                Horario horario;
    
    for(Profesor prof: profesores)
            {
             //   System.out.println("Horario del profesor: " + prof.getNombre());
          output+="Horario del profesor: " + prof.getNombre() + " \n";
               horario = prof.getHorario();
             
               materias = horario.getMaterias();
              // System.out.println("Tanda: \n" + horario.getTanda());
              output+="Tanda: " + horario.getTanda() + "\n";
               for(int i =0; i<materias.size(); i++)
               {
                   
                  
                   Materia mat = materias.get(dias.get(i+1));
                  

                   if(mat==null)
                   { 
                       //System.out.println("El " + dias.get(i+1) + " no tiene clases");
                       output+="El " + dias.get(i +1) + " no tiene clases \n";
                   }
                     
                   else
                   {
                   //System.out.println("El " + dias.get(i+1) + " tiene " + mat.getNombre() + " en el Aula " + mat.getAula());
                   output+="El " + dias.get(i+1) + " tiene " + mat.getNombre() + " en el aula " + mat.getAula() + " \n";
                           }
               }
               
                    document.add(new Paragraph(output)); 
                    

            }
    document.close();
     
        }
    
    public void ingresarDatos()
    {
        
      

        
        }
    public InterfazGrafica() {
        try {
            formater =  new MaskFormatter("###-######-##");
        } catch (ParseException ex) {
            Logger.getLogger(InterfazGrafica.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        ingresarDatos();
        profesores = new ArrayList<Profesor>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaHorario = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        txtCreditos = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaProfesores = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        lblProfesoresSinHorario = new javax.swing.JLabel();
        txtCedula = new javax.swing.JFormattedTextField(formater);
        btnGenerarPDF = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Horarios"));

        tablaHorario.setModel(modeloHorario);
        jScrollPane1.setViewportView(tablaHorario);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 936, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(258, 258, 258))
        );

        jLabel1.setText("HORARIO DE CLASE");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Agregar Profesores"));

        jLabel2.setText("Nombre");

        jLabel3.setText("Cedula");

        jLabel4.setText("Apellido");

        jLabel5.setText("Creditos");

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        tablaProfesores.setModel(modeloProfesor);
        jScrollPane2.setViewportView(tablaProfesores);

        lblProfesoresSinHorario.setText("Ver");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addGap(41, 41, 41)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCreditos, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblProfesoresSinHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(29, 29, 29))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtCreditos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAgregar)
                            .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblProfesoresSinHorario)
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        btnGenerarPDF.setText("Generar PDF");
        btnGenerarPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarPDFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(196, 196, 196))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnGenerarPDF, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGenerarPDF, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(86, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    //Metodo agregar Profesor
    public void agregarProfesor(Profesor profesor)
    {
        profesores.add(profesor);
        listarTablaProfesores();
        setearDias();
        
        
    }
    
    //Llenar tabla de profeores
    public void listarTablaProfesores()
    {
        modeloProfesor.setRowCount(0);
        String[] row = new String[4];
        
        for(Profesor temp: profesores)
        {
            row[0] = temp.getCedula();
            row[1] = temp.getNombre();
            row[2] = temp.getApellido();
            row[3] = String.valueOf(temp.getHora());
            modeloProfesor.addRow(row);
            
            
            
        }
    }
    
    public boolean checkCedula(String cedula)
    {
        if(!profesores.isEmpty())
        {
            for(Profesor t: profesores)
                if(t.getCedula().equals(cedula))
                    return true;
        }
        
        return false;
          
    }
    
    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed

       String nombre = txtNombre.getText();
       String apellido = txtApellido.getText();
       String cedula = txtCedula.getText();
       if(nombre.equals("") || apellido.equals(""))
           JOptionPane.showMessageDialog(null, "Nombre y apellido deben de estar llenos", "Mensaje error",
                   JOptionPane.INFORMATION_MESSAGE);
        else if(checkCedula(cedula)){
       
           JOptionPane.showMessageDialog(null, "Existe un profesor con esa cedula");
       } else{
       int creditos= 0;
       
       //Verificar que creditos sea de tipo numerico
       try{
           
        creditos = Integer.parseInt(txtCreditos.getText());
        //validar numero de creditos
        if(!(creditos %4==0))
        {
            JOptionPane.showMessageDialog(null, "Debe de ingresar creditos divisibles");
        }
        else{
            
        Profesor temp = new Profesor(nombre,apellido, cedula, creditos); 
        agregarProfesor(temp);
        txtNombre.setText("");
        txtApellido.setText("");
       txtCedula.setValue("");
        txtCreditos.setText("");
        
        }
       
       } catch(NumberFormatException ex)
       {
           JOptionPane.showMessageDialog(null, "Ingresar NUMERO de creditos en numeros", "Numero error",
                   JOptionPane.ERROR_MESSAGE);
       }
       
      
       
       }
        
        
    }//GEN-LAST:event_btnAgregarActionPerformed

    
    public void imprimirProfesores()
    {
        
        modeloHorario.setRowCount(0);
           // String[] titulosHorario = {"Profesor", "Lunes", "Martes", "Miercoles", "Jueves", "Viernes", "Sabado", "Tanda", "Hora"};
        
           for(int i =0; i<profesores.size(); i++)
           {
               Profesor profesor = profesores.get(i);
                          String[] fila = new String[8];

               Horario horario = profesor.getHorario();
               Map<String,Materia> materias = horario.getMaterias();
              //JOptionPane.showMessageDialog(null, materias.size());
               fila[0] = profesor.getNombre() + " " + profesor.getApellido();
               for(int j =1; j<7; j++)
               {
                   Materia temp = materias.get(dias.get(j));
                   if(temp!=null)
                   {
                       fila[j] = temp.getNombre() + " " +temp.getAula(); 
                   }
               }
               
               //remueve el profesor con su horario de la lista
               //incrementa el contador
               //lo agrega a la tabla de horario
               modeloHorario.addRow(fila);
               
           }
           
           listarTablaProfesores();
        

    }
    
    private void btnGenerarPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarPDFActionPerformed
        try {
            ListaDeMateri listaMaterias = new ListaDeMateri();
            List<Materia> materias = listaMaterias.getMaterias();
            asignarMaterias(materias);
             modeloProfesor.setRowCount(0);        
             imprimirPDF();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(InterfazGrafica.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(InterfazGrafica.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnGenerarPDFActionPerformed

    
 
    
    public void asignarMaterias(List<Materia> materias)
    {
        int materia = 0;
      
        
        if(profesores.size()<1)
        {
            JOptionPane.showMessageDialog(null, "Debe de agregar por lo menos un profesor");
        } else{
            
            
            for(int i =0; i<profesores.size(); i++)
            {
               
                    //obtenitnedo creditos del profesor
                    int creditos = profesores.get(i).getHora();
                    //JOptionPane.showMessageDialog(null, creditos);
                    Horario horario = new Horario();
                    Map<String, Materia> tempMats = new HashMap<String,Materia>();
                    while(creditos!=0)
                    {
                        if(materias.isEmpty())
                        {
                        System.out.println("Vacio");
                        
                       break;
                        
                        }
                        else{
                            Materia temp = null;
                            
                         if(materia<materias.size())
                          temp = materias.get(materia);
                         
                        //obtener dia aleatorio
                       
                            Integer dia = devolverDiaActual();
                            tempMats.put(dias.get(dia), temp);
                             creditos = creditos -4;
                        
                       //se incrementa el numero de la materia actual
                        materia++;
                        
                        
                      horario.setMaterias(tempMats);
                    }//fin del else
                       
                        
                    } //fin while
                    
                    //seteando horario
                    profesores.get(i).setHorario(horario);
                
                
                } //fin else
                
            } //fin for
        imprimirProfesores();
            
       
    }// fin metodo
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazGrafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazGrafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazGrafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazGrafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new InterfazGrafica().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnGenerarPDF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JLabel lblProfesoresSinHorario;
    private javax.swing.JTable tablaHorario;
    private javax.swing.JTable tablaProfesores;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JFormattedTextField txtCedula;
    private javax.swing.JTextField txtCreditos;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables

}
